import os
from dotenv import load_dotenv
from pathlib import Path

from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# üîë Carregar as vari√°veis do .env
print(f"[DEBUG] Procurando .env em: {Path.cwd()}")
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
print(f"[DEBUG] BOT_TOKEN encontrado: {'SIM' if BOT_TOKEN else 'N√ÉO'}")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN n√£o encontrado no ambiente. Verifique seu arquivo .env e se a vari√°vel est√° correta.")

# üîß Fun√ß√µes dos comandos

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üëã **Bem-vindo ao bot da Comunidade Kaspa Brasil!**  

Use /help para ver todos os comandos dispon√≠veis.
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = (
        "üìñ *Comandos dispon√≠veis:*  \n\n"
        "/analytics ‚Äî Ferramentas de an√°lise  \n"
        "/regras ‚Äî Regras do grupo  \n"
        "/info ‚Äî Informa√ß√µes gerais sobre Kaspa  \n"
        "/tools ‚Äî Ferramentas e servi√ßos t√©cnicos  \n"
        "/media ‚Äî Comunidade e m√≠dia  \n"
        "/shop ‚Äî Mercado e com√©rcio  \n"
        "/projects ‚Äî Projetos e recursos criativos  \n"
        "/p2p_oficial_br ‚Äî P2P oficial do grupo  \n"
        "/exchanges_br ‚Äî Corretoras principais  \n"
        "/exchanges_small ‚Äî Corretoras menores  \n"
        "/swap_services ‚Äî Servi√ßos de swap  \n"
        "/fiat_payments_on_off_ramp ‚Äî Plataformas Fiat/Cripto  \n"
        "/other_platforms ‚Äî Outras plataformas  \n"
        "/hotwallets_recommended ‚Äî Hotwallets recomendadas  \n"
        "/hotwallets_caution ‚Äî Hotwallets (aten√ß√£o)  \n"
        "/hardware_wallets ‚Äî Coldwallets e Hardwallets  "
    )
    if update.effective_message:
        await update.effective_message.reply_text(message)


async def regras(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üìú **Regras do Grupo (Atualizado 02/06/2025)**

1Ô∏è‚É£ Discuss√µes devem ser sobre **Kaspa**, sua tecnologia, casos de uso, atualiza√ß√µes e etc.  
Compara√ß√µes com outras criptos s√≥ se forem relevantes.

2Ô∏è‚É£ Respeite as decis√µes dos administradores.

3Ô∏è‚É£ ‚ùå Proibido FUD, espalhar desinforma√ß√£o, rumores ou cr√≠ticas n√£o construtivas sobre Kaspa.

4Ô∏è‚É£ ‚ùå Proibido qualquer tipo de discrimina√ß√£o, ofensa, ass√©dio ou linguagem inadequada.

5Ô∏è‚É£ üáßüá∑ Apenas **portugu√™s** √© permitido no grupo.
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
‚ÑπÔ∏è **Informa√ß√µes Gerais sobre Kaspa:**

‚Ä¢ https://kaspa.org/
‚Ä¢ https://wiki.kaspa.org/en/home
‚Ä¢ https://api.kaspa.org/docs
‚Ä¢ https://kaspafunding.com/
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def analytics(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üìä **Ferramentas de An√°lise:**

‚Ä¢ https://explorer.kaspa.org/
‚Ä¢ https://www.kaspalytics.com/
‚Ä¢ https://kas.fyi/
‚Ä¢ https://www.kaspainsights.com/
‚Ä¢ https://macmachi.github.io/kaspa-network-visualizer/
‚Ä¢ https://kaspaspeed.com/
‚Ä¢ https://kasview.netlify.app/
‚Ä¢ https://kasparchive.com/
‚Ä¢ https://www.kasparainbowchart.com/
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def tools(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üõ†Ô∏è **Ferramentas e Servi√ßos T√©cnicos:**

‚Ä¢ https://www.kasplex.org/home
‚Ä¢ https://kastools.com/
‚Ä¢ https://kgi.kaspad.net/
‚Ä¢ https://nodes.kaspa.ws/
‚Ä¢ https://deepwiki.com/kaspanet/rusty-kaspa
‚Ä¢ https://research.kas.pa
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def media(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üì∞ **Comunidade e M√≠dia:**

‚Ä¢ https://kasmedia.com/
‚Ä¢ https://kaspaweekly.com/
‚Ä¢ https://kaspahub.org
‚Ä¢ https://kaspalife.org
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def shop(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üõçÔ∏è **Mercado e Com√©rcio:**

‚Ä¢ https://kasbay.org/
‚Ä¢ https://kasway.xyz
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def projects(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üé® **Outros Recursos e Projetos Criativos:**

‚Ä¢ https://kas.energy
‚Ä¢ https://whenkas.github.io/
‚Ä¢ https://kas.live
‚Ä¢ https://kaspanodes.com
‚Ä¢ https://kas-music.web.app/
‚Ä¢ https://kasunder.com/overview
‚Ä¢ https://kaspajobs.com
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def p2p_oficial_br(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
ü§ù *P2P Oficial do Grupo:*  
@el\\_locco\\_p2p
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="MarkdownV2")


async def exchanges_br(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üèõÔ∏è **Corretoras Centralizadas Grandes:**

‚Ä¢ BingX - https://bingx.com
‚Ä¢ Bitget - https://www.bitget.com
‚Ä¢ Bitmart - https://www.bitmart.com
‚Ä¢ Bitrue - https://www.bitrue.com
‚Ä¢ Bybit - https://www.bybit.com
‚Ä¢ CoinEx - https://www.coinex.com
‚Ä¢ Digifinex - https://www.digifinex.com/pt-pt
‚Ä¢ Gate - https://www.gate.io
‚Ä¢ Kraken - https://www.kraken.com
‚Ä¢ Kucoin - https://www.kucoin.com
‚Ä¢ LBank - https://lbank.com
‚Ä¢ Mexc - https://www.mexc.com
‚Ä¢ Phemex - https://phemex.com
‚Ä¢ Poloniex - https://poloniex.com
‚Ä¢ Tapbit - https://www.tapbit.com
‚Ä¢ Xt - https://www.xt.com
‚Ä¢ Weex - https://www.weex.com
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def exchanges_small(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üè¶ **Corretoras Centralizadas Pequenas:**

‚Ä¢ AltcoinT - https://www.altcointrader.co.za
‚Ä¢ Ascendex - https://ascendex.com
‚Ä¢ Biconomy - https://www.biconomy.com
‚Ä¢ BigOne - https://big.one/trade
‚Ä¢ Bitcointry - https://bitcointry.com
‚Ä¢ Bitpanda - https://www.bitpanda.com
‚Ä¢ Bitvavo - https://www.bitvavo.com
‚Ä¢ BTCC - https://www.btcc.com/
‚Ä¢ Btse - https://www.btse.com
‚Ä¢ CoinOne - https://coinone.co.kr
‚Ä¢ Coinspot - https://www.coinspot.com.au
‚Ä¢ Exmo - https://www.exmo.me
‚Ä¢ Hotcoin - https://www.hotcoin.com
‚Ä¢ Kcex - https://www.kcex.com
‚Ä¢ Novadax - https://www.novadax.com.br/
‚Ä¢ Ourbit - https://www.ourbit.com
‚Ä¢ Tapbit - https://www.tapbit.com
‚Ä¢ Wazirx - https://wazirx.com
‚Ä¢ Xeggex - https://xegeex.com
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def swap_services(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üîÑ **Servi√ßos de Swap e Troca Instant√¢nea:**

‚Ä¢ ChangeHero - https://changehero.io
‚Ä¢ ChangeNow - https://www.changenow.io
‚Ä¢ Chaingelly - https://changelly.com
‚Ä¢ Exolim - https://exolix.com
‚Ä¢ Godex - https://godex.io
‚Ä¢ HoudiniSwap - https://houdiniswap.com
‚Ä¢ LetsExchange - https://letsexchange.io
‚Ä¢ Nonkyc - https://nonkyc.io
‚Ä¢ Quickex - https://quickex.io
‚Ä¢ RocketX - https://app.rocketx.exchange
‚Ä¢ SimpleSwap - https://simpleswap.io
‚Ä¢ Stealthex - https://stealthex.io
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def fiat_payments_on_off_ramp(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üí≥ **Plataformas de Pagamento e Fiat On/Off-Ramp:**

‚Ä¢ Caled - https://calebandbrown.com/
‚Ä¢ Onramp - https://onramp.money
‚Ä¢ Paxful - https://www.paxful.com
‚Ä¢ Topperpay - https://www.topperpay.com
‚Ä¢ Uphold - https://uphold.com
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def other_platforms(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üß† **Outras Plataformas:**

‚Ä¢ Baltex - https://baltex.io
‚Ä¢ Coinoswap - https://www.coinoswap.com/
‚Ä¢ CoinStash - https://www.coinstash.com.au
‚Ä¢ CoinStore - https://www.coinstore.com
‚Ä¢ Dex-Trade - https://dex-trade.com
‚Ä¢ GroveX - https://www.grovex.io
‚Ä¢ Hibit - https://hibit.app
‚Ä¢ Jucoin - https://jucoin.com
‚Ä¢ LCX Exchange - https://exchange.lcx.com
‚Ä¢ Neverless - https://neverless.com
‚Ä¢ OrangeX - https://www.orangex.com
‚Ä¢ Pionex - https://www.pionex.us
‚Ä¢ Swyftx - App na Playstore
‚Ä¢ Zodia - http://zodia-custody.com/
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def hotwallets_recommended(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üî• **Hotwallets (Recomendadas):**

- Kaspium: https://kaspium.io/
- OKX Web3: https://www.okx.com/web3/
- Paper Wallet: https://github.com/svarogg/kaspaper/releases/tag/v0.0.3
- Zelcore: https://zelcore.io/
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def hotwallets_caution(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
‚ö†Ô∏è **Hotwallets (N√£o testadas - USE POR SUA CONTA E RISCO):**

‚Ä¢ Cool Wallet - App Store / Play Store
‚Ä¢ Guarda: https://guarda.com
‚Ä¢ Kaspiano: https://github.com/KASPIANO/kaspacom-web-wallet
‚Ä¢ Mathwallet: http://mathdapp.store/?blockchain=kaspa
‚Ä¢ Kastle: https://github.com/forbole/kastle/releases/tag/v2.19.0
‚Ä¢ Kurncy Wallet - App Store / Play Store
‚Ä¢ PlusWallet: https://pluswallet.app
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def hardware_wallets(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üßä **Hardwallets e Coldwallets (Recomendadas):**

‚Ä¢ Ledger App (via Kasvault): https://kasvault.io/
‚Ä¢ OneKey: https://onekey.so/
‚Ä¢ Tangem: https://tangem.com/
‚Ä¢ Safepal: https://www.safepal.com/pt/download
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def contas_x(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = """
üê¶ **Contas do X (Twitter) Relacionadas √† Kaspa:**

üë®‚Äçüíª *Desenvolvedores:*
‚Ä¢ https://x.com/coderofstuff_
‚Ä¢ https://x.com/hashdag
‚Ä¢ https://x.com/michaelsuttonil

üåé *Estrangeiros:*
‚Ä¢ https://x.com/BankQuote_DAG
‚Ä¢ https://x.com/christi61026749
‚Ä¢ https://x.com/DailyKaspa
‚Ä¢ https://x.com/kasmediadotcom
‚Ä¢ https://x.com/KaspaHubOrg
‚Ä¢ https://x.com/Kaspa_BlockDAG
‚Ä¢ https://x.com/KaspaClass
‚Ä¢ https://x.com/Kaspa_Commons
‚Ä¢ https://x.com/KaspaCurrency
‚Ä¢ https://x.com/KaspaFacts
‚Ä¢ https://x.com/kaspalife
‚Ä¢ https://x.com/KaspaReport
‚Ä¢ https://x.com/KryptoLeidy
‚Ä¢ https://x.com/OrangutanElder
‚Ä¢ https://x.com/plzsats
‚Ä¢ https://x.com/skibumtrading
‚Ä¢ https://x.com/supertypo_kas
‚Ä¢ https://x.com/Themooseisloos5

üáßüá∑ *Brasileiros:*
‚Ä¢ https://x.com/paulopowers
"""
    if update.effective_message:
        await update.effective_message.reply_text(message, parse_mode="Markdown")


async def error_handler(update, context):
    print(f"Erro: {context.error}")
    if hasattr(update, 'effective_message') and update.effective_message:
        await update.effective_message.reply_text("Ocorreu um erro. Tente novamente ou contate o suporte.")


# üîë Inicializa√ß√£o do bot
def main():
    app = ApplicationBuilder().token(BOT_TOKEN or "").build()

    # üîó Adicionando comandos
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("analytics", analytics))
    app.add_handler(CommandHandler("regras", regras))
    app.add_handler(CommandHandler("info", info))
    app.add_handler(CommandHandler("tools", tools))
    app.add_handler(CommandHandler("media", media))
    app.add_handler(CommandHandler("shop", shop))
    app.add_handler(CommandHandler("projects", projects))
    app.add_handler(CommandHandler("p2p_oficial_br", p2p_oficial_br))
    app.add_handler(CommandHandler("exchanges_br", exchanges_br))
    app.add_handler(CommandHandler("exchanges_small", exchanges_small))
    app.add_handler(CommandHandler("swap_services", swap_services))
    app.add_handler(CommandHandler("fiat_payments_on_off_ramp", fiat_payments_on_off_ramp))
    app.add_handler(CommandHandler("other_platforms", other_platforms))
    app.add_handler(CommandHandler("hotwallets_recommended", hotwallets_recommended))
    app.add_handler(CommandHandler("hotwallets_caution", hotwallets_caution))
    app.add_handler(CommandHandler("hardware_wallets", hardware_wallets))
    app.add_handler(CommandHandler("contas_x", contas_x))
    
    # Adicionando manipulador de erros
    app.add_error_handler(error_handler)

    print("Bot Kaspa Brasil rodando...")

    app.run_polling()


if __name__ == "__main__":
    main()
